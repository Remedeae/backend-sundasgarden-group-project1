*, *::before, *::after {
  box-sizing: border-box;
}

* {
  margin: 0;
  padding: 0;
}

ul[role=list], ol[role=list] {
  list-style: none;
}

html:focus-within {
  scroll-behavior: smooth;
}

a:not([class]) {
  -webkit-text-decoration-skip: ink;
          text-decoration-skip-ink: auto;
}

img, picture, svg, video, canvas {
  max-width: 100%;
  height: auto;
  vertical-align: middle;
  font-style: italic;
  background-repeat: no-repeat;
  background-size: cover;
}

input, button, textarea, select {
  font: inherit;
}

@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }
  *, *::before, *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
    transition: none;
  }
}
body, html {
  height: 100%;
  scroll-behavior: smooth;
}

* {
  font-family: system-ui, sans-serif;
  font-weight: 400;
  color: #717182;
  line-height: 1.2rem;
}

.app {
  display: grid;
  grid-template: 1fr 1fr/1fr 1fr 1fr;
  width: 97%;
  height: 94%;
}
.app > * {
  border: solid #E5E5E5 0.6rem;
}

p {
  font-size: 0.9rem;
}

h2 {
  color: #0A0A0A;
  font-size: 1rem;
}

h3 {
  color: aliceblue;
}

.weather {
  grid-area: 1/1/2/2;
}

.catPic {
  grid-area: 1/2/3/2;
}

.toDo {
  grid-area: 2/1/3/3;
}

.completedTasks {
  grid-area: 3/2/4/3;
}

.addTask {
  grid-area: 3/1/4/2;
}/*# sourceMappingURL=index.css.map */